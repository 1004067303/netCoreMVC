<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!-- 读取<log4not>节点 -->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>

  <log4net>
    <!--正常日志：：：记录正常日志-->
    <!-- appender 定义日志输出方式   将日志以回滚文件的形式写到MySQL数据库中。-->
    <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">
      <!-- 代表缓存大小,在没达到缓存大小时,暂时不会存到数据库中, -->
      <!-- 当程序关闭之后,会将未插入的信息加入到数据库中 -->
 

      <!--引入《MySql.Data》包-->
      <!--<connectionType value="Oracle.ManagedDataAccess.Client.OracleConnection, Oracle.ManagedDataAccess.Core" />-->
      <connectionType value="Oracle.ManagedDataAccess.Client.OracleConnection, Oracle.ManagedDataAccess.Core, Version=3.21.130, Culture=neutral" />

      <connectionString value="User Id=JHA;Password=aqa;Data Source=127.0.0.1:1521/ORCL;" />

      <!-- 修改为适用于 Oracle 的插入语句 -->
      <commandText value="INSERT INTO LOG4NET (LOG_DATETIME, LOG_THREAD, LOG_LEVEL, LOG_LOGGER, LOG_MESSAGE) VALUES (:LOG_DATETIME, :LOG_THREAD, :LOG_LEVEL, :LOG_LOGGER, :LOG_MESSAGE) " />

      <!-- 修改为适用于 Oracle 的参数配置 -->
      <!-- 参数配置 -->
      <parameter>
        <parameterName value=":LOG_DATETIME" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.PatternLayout">
         
        </layout>
      </parameter>

      <parameter>
        <parameterName value=":LOG_THREAD" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
   
        </layout>
      </parameter>

      <parameter>
        <parameterName value=":LOG_LEVEL" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
 
        </layout>
      </parameter>

      <parameter>
        <parameterName value=":LOG_LOGGER" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">

        </layout>
      </parameter>

      <parameter>
        <parameterName value=":LOG_MESSAGE" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
       
        </layout>
      </parameter>

    </appender>

    <appender name="AdoNetAppender_Oracle" type="log4net.Appender.AdoNetAppender">
      <connectionType value="System.Data.OracleClient.OracleConnection, System.Data.OracleClient, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=[127.0.0.1:1521/ORCL];User ID=[JHA];Password=[aqa]" />
      <commandText value="INSERT INTO Log (Datetime,Thread,Log_Level,Logger,Message) VALUES (:log_date, :thread, :log_level, :logger, :message)" />
      <bufferSize value="128" />
      <parameter>
        <parameterName value=":log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value=":thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value=":message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
    
    <!--正常日志：：：记录正常日志-->
    <!--按日期分割日志文件 一天一个-->
    <!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。-->
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="Log\log_"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <datePattern value="yyyy\\yyyyMM\\yyyyMMdd'.txt'"/>
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="100MB"/>
      <!--计数类型为1，2，3…-->
      <!--<param name="CountDirection" value="1"/>-->
      <layout type="log4net.Layout.PatternLayout">
        <!--输出格式-样例：
			记录时间：2022-08-24 17:59:31,172    线程ID：[4]    日志级别：INFO  
			当前类：Log4NetDemo.MainClass    行号：%L
			日志描述：创建连接失败。-->
        <conversionPattern value="记录时间：%date    线程ID：[%thread]    日志级别：%-5level %n
							当前类：%logger		行号：%L  %n
							日志描述：%message%newline %n"/>
      </layout>
    </appender>

    <!--错误日志：：：记录错误日志-->
    <!--按日期分割日志文件 一天一个-->
    <!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。-->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="Log\error_"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <datePattern value="yyyy\\yyyyMM\\yyyyMMdd'.txt'"/>
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="100MB"/>
      <!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout-->
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <!--输出格式 模板-->
        <!-- <param name="ConversionPattern"  value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger   
        操作者ID：%property{Operator} 操作类型：%property{Action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  
        记录位置：%location%n 消息描述：%property{Message}%n   异常：%exception%n 消息：%message%newline%n%n" />-->

        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
                                  %n【日志级别】%-5level
                                  %n【记录时间】%date
                                  %n【执行时间】[%r]毫秒
                                  %n【错误位置】%logger 属性[%property{NDC}]
                                  %n【错误描述】%message
                                  %n【错误详情】%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter,log4net">
        <levelMin value="ERROR" />
        <levelMax value="FATAL" />
      </filter>
    </appender>

    <!--DEBUG：：：记录DEBUG日志-->
    <!--按日期分割日志文件 一天一个-->
    <!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。-->
    <appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="Log\debug_"/>
      <!--是否追加到文件-->
      <appendToFile value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <maxSizeRollBackups value="-1"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <rollingStyle value="Composite"/>
      <datePattern value="yyyy\\yyyyMM\\yyyyMMdd'.txt'"/>
      <!--是否只写到一个文件中-->
      <staticLogFileName value="false"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="100MB"/>
      <!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout-->
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <!--输出格式 模板-->
        <!-- <param name="ConversionPattern"  value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger   
        操作者ID：%property{Operator} 操作类型：%property{Action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  
        记录位置：%location%n 消息描述：%property{Message}%n   异常：%exception%n 消息：%message%newline%n%n" />-->

        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>-->
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝
                                  %n【日志级别】%-2level
                                  %n【记录时间】%date
                                  %n【执行时间】[%r]毫秒
                                  %n【debug位置】%logger 属性[%property{NDC}]
                                  %n【debug描述】%message"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter,log4net">
        <levelMin value="DEBUG" />
        <levelMax value="WARN" />
      </filter>
    </appender>

    <root>
      <!--日志等级：OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL-->
      <level value="ALL" />
      <appender-ref ref="ADONetAppender" />
      <appender-ref ref="AdoNetAppender_Oracle" />
      <appender-ref ref="RollingFile" />
      <appender-ref ref="ErrorAppender" />
      <appender-ref ref="DebugAppender" />
      <appender-ref ref="ADONetAppender" />
    </root>

  </log4net>

</configuration>